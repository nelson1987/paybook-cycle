version: '3.4'

services:        
    mongo-express:
      image: mongo-express
      restart: always
      ports:
        - 8081:8081
      environment:
        ME_CONFIG_MONGODB_ADMINUSERNAME: root
        ME_CONFIG_MONGODB_ADMINPASSWORD: example
        ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

    mongo:
      image: mongo
      command: mongod --auth
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: example
      ports:
        - 27017:27017
      volumes:
        - ./scripts/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro

    kafka:
      image: wurstmeister/kafka:latest
      ports:
        - "9092:9092"
      expose:
        - "9093"
      environment:
        KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
        KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_CREATE_TOPICS: "test-topic:1:1" 
      depends_on:
        - zookeeper

    zookeeper:
      image: wurstmeister/zookeeper:latest
      ports:
        - "2181:2181"

    kafka-ui:
      image: provectuslabs/kafka-ui
      container_name: kafka-ui
      depends_on:
        - kafka
        - zookeeper
      ports:
        - "8080:8080"
      restart: always
      environment:
        KAFKA_CLUSTERS_0_NAME: teste
        KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
        KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181